#====# Profiles #==================================================================================#

profile.Default = !NORMAL_MAPPING !SPECULAR_MAPPING EMISSIVE_MODE=0 SUBSURFACE_SCATTERING_MODE=0
profile.ResPBR  =  NORMAL_MAPPING  SPECULAR_MAPPING EMISSIVE_MODE=2 SUBSURFACE_SCATTERING_MODE=2

#====# Settings #==================================================================================#

screen = <profile>     <empty> \
		 <empty>       [Environment] \
		 INFO          [Lighting] \
		 AUTHOR        [Materials] \
		 <empty>       [PostProcessing] \
		 [Debug]       [Compatibility]

screen.Environment = [Atmospherics] [Transparent] [Foliage] [Weather] <empty> <empty> SELECTION_BOX_WIDTH SELECTION_BOX_COLOR_R SELECTION_BOX_COLOR_G SELECTION_BOX_COLOR_B

	screen.Atmospherics = PLANET_GROUND VIEWER_BASE_ALTITUDE ATMOSPHERE_BOTTOM_ALTITUDE ATMOSPHERE_TOP_ALTITUDE SUN_RADIUS_ENLARGING [Fog] <empty> <empty> CLOUDS [Clouds] AURORA STARS_INTENSITY AURORA_STRENGTH STARS_COVERAGE GALAXY GALAXY_INTENSITY GALAXY_ROTATION

		screen.Clouds = CLOUD_CBR_ENABLED CLOUD_CBR_SCALE <empty> <empty> CLOUD_CUMULUS CLOUD_STRATOCUMULUS CLOUD_CIRROCUMULUS CLOUD_CIRRUS <empty> <empty> [CloudParams] CLOUD_CUMULUS_3D_FBM_WIP CLOUD_AERIAL_PERSPECTIVE CLOUD_LOCAL_LIGHTING CLOUD_SHADOWS

			screen.CloudParams = CLOUD_WIND_SPEED CLOUD_CUMULUS_SAMPLES CLOUD_CUMULUS_ALTITUDE CLOUD_CUMULUS_THICKNESS CLOUD_PLANE_ALTITUDE

		screen.Fog = BORDER_FOG BORDER_FOG_FALLOFF BLOOMY_FOG PER_BIOME_FOG [Volumetric] <empty> <empty> LAVA_FOG POWDERED_SNOW_FOG BLINDNESS_DARKNESS_FOG

			screen.Volumetric = VOLUMETRIC_FOG <empty> FOG_QUALITY TIME_FADE VOLUMETRIC_FOG_SAMPLES SEA_LEVEL <empty> <empty> COLORED_VOLUMETRIC_FOG UW_VOLUMETRIC_FOG FOG_RAYLEIGH_DENSITY UW_VOLUMETRIC_FOG_DENSITY FOG_MIE_DENSITY UW_VOLUMETRIC_FOG_SAMPLES FOG_MIE_DENSITY_RAIN_MULTIPLIER

	screen.Transparent = WATER_PARALLAX WATER_CAUSTICS <empty> <empty> [WaterParams] GLASS_REFRACT_IOR TRANSLUCENT_LIGHTING TRANSLUCENT_LIGHTING_BLENDED_MODE TRANSLUCENT_LIGHTING_BLENDED_FACTOR TRANSLUCENT_ROUGHNESS RAYTRACED_REFRACTION REFRACTION_STRENGTH

		screen.WaterParams = WATER_REFRACT_IOR WATER_WAVE_HEIGHT WATER_WAVE_SPEED WATER_FOG_DENSITY WATER_ABSORPTION_R WATER_ABSORPTION_G WATER_ABSORPTION_B

	screen.Foliage = WAVING_FOLIAGE
	screen.Foliage.columns = 1

	screen.Weather = RAIN_VISIBILITY

screen.Lighting = [Emissive] [SubsurfaceScattering] [GlobalIllumination] [AmbientOcclusion] [Shadows] [Misc] <empty> <empty> MINIMUM_AMBIENT_BRIGHTNESS <empty> TRANSLUCENT_LIGHTING TRANSLUCENT_LIGHTING_BLENDED_MODE TRANSLUCENT_LIGHTING_BLENDED_FACTOR

	screen.GlobalIllumination = SSPT_ENABLED SSPT_ACCUMULATED_MULTIPLE_BOUNCES SVGF_ENABLED SSPT_SPP SSPT_BOUNCES SSPT_FALLOFF SSPT_BLENDED_LIGHTMAP SSPT_MAX_BLENDED_FRAMES <empty> <empty> RSM_ENABLED RSM_SAMPLES RSM_RADIUS RSM_BRIGHTNESS RSM_MAX_BLENDED_FRAMES

	screen.AmbientOcclusion = AO_ENABLED AO_MULTI_BOUNCE <empty> <empty> SSAO_SAMPLES SSAO_STRENGTH GTAO_SLICES GTAO_DIRECTION_SAMPLES GTAO_RADIUS

	screen.Shadows = shadowMapResolution shadowDistance SHADOW_MAP_BIAS PCF_SAMPLES COLORED_SHADOWS SCREEN_SPACE_SHADOWS SHADOW_BACKFACE_CULLING SCREEN_SPACE_SHADOWS_SAMPLES CLOUD_SHADOWS PARALLAX_SHADOW

	screen.Misc = sunPathRotation NIGHT_BRIGHTNESS HANDHELD_LIGHTING HELD_LIGHT_BRIGHTNESS BLOCKLIGHT_TEMPERATURE SH_SLICES

screen.Materials = TEXTURE_FORMAT <empty> MOD_BLOCK_SUPPORT [Normal] <empty> [Parallax] NORMAL_MAPPING [Emissive] SPECULAR_MAPPING [Reflections] <empty> [SubsurfaceScattering]

	screen.Normal = AUTO_GENERATED_NORMAL AGN_STRENGTH AGN_RESOLUTION
	screen.Normal.columns = 1

	screen.Parallax = PARALLAX PARALLAX_DEPTH_WRITE <empty> <empty> PARALLAX_DEPTH PARALLAX_REFINEMENT PARALLAX_SAMPLES PARALLAX_REFINEMENT_STEPS PARALLAX_SHADOW PARALLAX_BASED_NORMAL

	screen.Emissive = EMISSIVE_MODE EMISSIVE_BRIGHTNESS EMISSIVE_CURVE
	screen.Emissive.columns = 1

	screen.Reflections = ROUGH_REFLECTIONS ROUGH_REFLECTIONS_THRESHOLD REFLECTION_FILTER RAYTRACE_REFINEMENT RAYTRACE_SAMPLES RAYTRACE_REFINEMENT_STEPS <empty> <empty> SPECULAR_HIGHLIGHT_BRIGHTNESS REAL_SKY_REFLECTIONS SPECULAR_DIFFUSION_CLAMP

	screen.SubsurfaceScattering = SUBSURFACE_SCATTERING_MODE SUBSURFACE_SCATTERING_STRENGTH SUBSURFACE_SCATTERING_BRIGHTNESS
	screen.SubsurfaceScattering.columns = 1

screen.PostProcessing = [FidelityFX] <empty> <empty> [DoF] [TAA] [MotionBlur] [Bloom] [Exposure] [Vignette] [Color]

	screen.FidelityFX = FSR_ENABLED FSR_RCAS_DENOISE FSR_RCAS_SHARPNESS <empty> CAS_ENABLED CAS_STRENGTH

	screen.DoF = 

	screen.TAA = TAA_ENABLED TAA_CLOSEST_FRAGMENT TAA_MAX_BLENDED_FRAMES TAA_VARIANCE_CLIPPING TAA_AGGRESSION <empty> TAA_SHARPEN TAA_SHARPNESS
	screen.TAA.columns = 1

	screen.MotionBlur = MOTION_BLUR MOTION_BLUR_SAMPLES MOTION_BLUR_STRENGTH
	screen.MotionBlur.columns = 1

	screen.Bloom = BLOOM_ENABLED BLOOM_BLUR_SAMPLES BLOOM_INTENSITY <empty> BLOOMY_FOG
	screen.Bloom.columns = 1

	screen.Exposure = AUTO_EXPOSURE AUTO_EXPOSURE_LOD <empty> <empty> ISO AUTO_EV_BIAS EXPOSURE_SPEED_DOWN EXPOSURE_SPEED_UP <empty> MANUAL_EV HISTOGRAM_AE <empty> HISTOGRAM_BIN_COUNT HISTOGRAM_MIN_EV HISTOGRAM_LOWER_BOUND HISTOGRAM_UPPER_BOUND

	screen.Vignette = VIGNETTE_ENABLED VIGNETTE_STRENGTH VIGNETTE_ROUNDNESS
	screen.Vignette.columns = 1

	screen.Color = TONEMAP_OPERATOR AGX_LOOK PURKINJE_SHIFT PURKINJE_SHIFT_STRENGTH

screen.Compatibility = MOD_BLOCK_SUPPORT PHYSICS_OCEAN_SUPPORT

screen.Debug = WHITE_WORLD DEBUG_NORMALS DEBUG_SKYVIEW DEBUG_BLOOM_TILES DEBUG_GI DEBUG_SKY_COLOR DEBUG_RESHADING

#====# Sliders #===================================================================================#

sliders = VIEWER_BASE_ALTITUDE ATMOSPHERE_BOTTOM_ALTITUDE ATMOSPHERE_TOP_ALTITUDE SUN_RADIUS_ENLARGING STARS_INTENSITY STARS_COVERAGE GALAXY_INTENSITY AURORA_STRENGTH \
		  CLOUD_CBR_SCALE CLOUD_WIND_SPEED CLOUD_CUMULUS_SAMPLES CLOUD_CUMULUS_ALTITUDE CLOUD_CUMULUS_THICKNESS CLOUD_PLANE_ALTITUDE \
		  VOLUMETRIC_FOG_SAMPLES SEA_LEVEL FOG_RAYLEIGH_DENSITY FOG_MIE_DENSITY FOG_MIE_DENSITY_RAIN_MULTIPLIER UW_VOLUMETRIC_FOG_DENSITY UW_VOLUMETRIC_FOG_SAMPLES \
		  AO_ENABLED SSAO_SAMPLES SSAO_STRENGTH GTAO_SLICES GTAO_DIRECTION_SAMPLES GTAO_RADIUS \
		  WATER_PARALLAX WATER_CAUSTICS WATER_REFRACT_IOR WATER_WAVE_HEIGHT WATER_WAVE_SPEED WATER_FOG_DENSITY WATER_ABSORPTION_R WATER_ABSORPTION_G WATER_ABSORPTION_B \
		  sunPathRotation shadowMapResolution shadowDistance SHADOW_MAP_BIAS PCF_SAMPLES SCREEN_SPACE_SHADOWS_SAMPLES \
		  HELD_LIGHT_BRIGHTNESS BLOCKLIGHT_TEMPERATURE MINIMUM_AMBIENT_BRIGHTNESS NIGHT_BRIGHTNESS SH_SLICES \
		  SSPT_SPP SSPT_BOUNCES SSPT_FALLOFF SSPT_BLENDED_LIGHTMAP SSPT_MAX_BLENDED_FRAMES RSM_SAMPLES RSM_RADIUS RSM_BRIGHTNESS RSM_MAX_BLENDED_FRAMES \
		  SSAO_SAMPLES SSAO_STRENGTH GTAO_SLICES GTAO_DIRECTION_SAMPLES GTAO_RADIUS \
		  WATER_REFRACT_IOR WATER_WAVE_HEIGHT WATER_WAVE_SPEED WATER_FOG_DENSITY WATER_ABSORPTION_R WATER_ABSORPTION_G WATER_ABSORPTION_B \
		  GLASS_REFRACT_IOR TRANSLUCENT_LIGHTING_BLENDED_FACTOR TRANSLUCENT_ROUGHNESS REFRACTION_STRENGTH \
		  BORDER_FOG_FALLOFF \
		  RAIN_VISIBILITY \
		  SELECTION_BOX_WIDTH SELECTION_BOX_COLOR_R SELECTION_BOX_COLOR_G SELECTION_BOX_COLOR_B \
		  AGN_STRENGTH AGN_RESOLUTION \
		  PARALLAX_DEPTH PARALLAX_SAMPLES PARALLAX_REFINEMENT_STEPS \
		  ROUGH_REFLECTIONS_THRESHOLD RAYTRACE_SAMPLES RAYTRACE_REFINEMENT_STEPS SPECULAR_HIGHLIGHT_BRIGHTNESS \
		  EMISSIVE_BRIGHTNESS EMISSIVE_CURVE \
		  SUBSURFACE_SCATTERING_STRENGTH SUBSURFACE_SCATTERING_BRIGHTNESS \
		  TAA_AGGRESSION TAA_MAX_BLENDED_FRAMES TAA_SHARPNESS \
		  MOTION_BLUR_SAMPLES MOTION_BLUR_STRENGTH \
		  BLOOM_BLUR_SAMPLES BLOOM_INTENSITY \
		  AUTO_EXPOSURE_LOD ISO EXPOSURE_SPEED_DOWN EXPOSURE_SPEED_UP AUTO_EV_BIAS MANUAL_EV HISTOGRAM_BIN_COUNT HISTOGRAM_MIN_EV HISTOGRAM_LOWER_BOUND HISTOGRAM_UPPER_BOUND \
		  VIGNETTE_STRENGTH VIGNETTE_ROUNDNESS \
		  FSR_RCAS_SHARPNESS CAS_STRENGTH \
		  PURKINJE_SHIFT_STRENGTH TONEMAP_OPERATOR AGX_LOOK

#====# Vanilla Settings #==========================================================================#

clouds					  = off
dynamicHandLight		  = true
oldHandLight			  = false
oldLighting				  = false
underwaterOverlay		  = false
sun						  = false
vignette				  = false
separateAo				  = true
frustum.culling			  = true
rain.depth				  = false
beacon.beam.depth		  = true
particles.before.deferred = true

#ifdef RSM_ENABLED
	shadow.culling 		  = false
#endif

#ifndef DH_SHADOW
	dhShadow.enabled 	  = false
#endif

#====# Custom Textures #===========================================================================#

texture.noise 					= texture/Noise2D.png
texture.prepare.colortex0.1 	= texture/atmosphere/Combined.lut TEXTURE_3D RGBA32F 256 128 33 RGBA FLOAT
texture.deferred.colortex0.1 	= texture/atmosphere/Combined.lut TEXTURE_3D RGBA32F 256 128 33 RGBA FLOAT

#ifdef GALAXY
# From https://svs.gsfc.nasa.gov/4856
texture.deferred.colortex2 		= texture/atmosphere/StarmapRandom2020_4k.png
#endif

#ifdef CLOUD_CUMULUS_3D_FBM_WIP
texture.deferred.depthtex2.1 	= texture/PerlinWorley-Worley3d_256x.dat TEXTURE_3D RGBA8 256 256 256 RGBA UNSIGNED_BYTE
texture.deferred.colortex15.1 	= texture/Worley3d_32x.dat TEXTURE_3D RGB8 32 32 32 RGB UNSIGNED_BYTE
#endif

#====# Blending #=================================================================================-#

blend.gbuffers_armor_glint		= SRC_COLOR ONE ZERO ONE
blend.gbuffers_basic			= off
blend.gbuffers_beaconbeam		= off
blend.gbuffers_block			= off
blend.gbuffers_damagedblock		= off
blend.gbuffers_entities			= off
blend.gbuffers_hand				= off
blend.gbuffers_hand_water		= off
blend.gbuffers_skybasic			= off
blend.gbuffers_skytextured		= off
blend.gbuffers_spidereyes		= off
blend.gbuffers_terrain			= off
blend.gbuffers_textured			= off
blend.gbuffers_water			= off
blend.gbuffers_weather			= off
blend.shadow                	= off

#ifdef DISTANT_HORIZONS
	blend.dh_terrain 			= off
	blend.dh_water				= off
#endif

#====# Gbuffer Alpha #=============================================================================#

blend.gbuffers_block.colortex6 		= SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE ZERO
blend.gbuffers_entities.colortex6 	= SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE ZERO
blend.gbuffers_hand.colortex6 		= SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE ZERO
# blend.gbuffers_textured.colortex0 = SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE ZERO
blend.gbuffers_water.colortex2		= SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE ZERO
# blend.gbuffers_water.colortex6	= SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE ZERO

#====# Custom Uniforms #===========================================================================#

# Screen uniforms
uniform.vec2.viewSize 				= vec2(viewWidth, viewHeight)
uniform.vec2.viewPixelSize 			= vec2(1.0 / viewWidth, 1.0 / viewHeight)


# Light vector uniforms
variable.float.viewLightVectorNorm 	= 1.0 / sqrt(shadowLightPosition.x * shadowLightPosition.x + shadowLightPosition.y * shadowLightPosition.y + shadowLightPosition.z * shadowLightPosition.z)
variable.float.viewLightVectorX 	= shadowLightPosition.x * viewLightVectorNorm
variable.float.viewLightVectorY 	= shadowLightPosition.y * viewLightVectorNorm
variable.float.viewLightVectorZ 	= shadowLightPosition.z * viewLightVectorNorm
uniform.vec3.viewLightVector 		= vec3(viewLightVectorX, viewLightVectorY, viewLightVectorZ)

uniform.vec3.worldLightVector 		= vec3(shadowModelViewInverse.2.0, shadowModelViewInverse.2.1, shadowModelViewInverse.2.2)

variable.float.sunlightSign 		= -signum(sunAngle * 2.0 - 1.0)
variable.float.worldSunVectorX 		= shadowModelViewInverse.2.0 * sunlightSign
variable.float.worldSunVectorY 		= shadowModelViewInverse.2.1 * sunlightSign
variable.float.worldSunVectorZ 		= shadowModelViewInverse.2.2 * sunlightSign
uniform.vec3.worldSunVector 		= vec3(worldSunVectorX, worldSunVectorY, worldSunVectorZ)

variable.bool.moonlit     			= worldSunVectorY < -0.05
uniform.vec3.cloudLightVector      	= vec3(if(moonlit, -worldSunVectorX, worldSunVectorX), if(moonlit, -worldSunVectorY, worldSunVectorY), if(moonlit, -worldSunVectorZ, worldSunVectorZ))


# TAA offset (using R2 sequence)
variable.float.frameX 				= frac(frameCounter / 1.3247179572 + 0.5) * 2.0 - 1.0
variable.float.frameY 				= frac(frameCounter / 1.7548776662 + 0.5) * 2.0 - 1.0
uniform.vec2.taaOffset 				= vec2(frameX / viewWidth, frameY / viewHeight)

variable.float.prevFrameX 			= frac((frameCounter - 1) / 1.3247179572 + 0.5) * 2.0 - 1.0
variable.float.prevFrameY 			= frac((frameCounter - 1) / 1.7548776662 + 0.5) * 2.0 - 1.0
uniform.vec2.prevTaaOffset 			= vec2(prevFrameX / viewWidth, prevFrameY / viewHeight)


# Time uniforms
uniform.float.worldTimeCounter 		= ((worldDay % 256) * 24000.0 + worldTime) * 0.05

uniform.bool.worldTimeChanged 		= abs(smooth(worldTimeCounter, 0.1, 0.1) - worldTimeCounter) > 0.9

# From https://www.desmos.com/calculator/kniltwna7u
uniform.float.meFade      			= if(worldSunVectorY < 0.18, 0.37 + 1.2 * max(0.0, -worldSunVectorY), 1.7)
uniform.float.meWeight    			= pow(clamp(1.0 - meFade * abs(worldSunVectorY - 0.18), 0.0, 1.0), 2.0)
uniform.float.timeNoon     			= if(worldSunVectorY > 0.0, 1.0, 0.0) * (1.0 - meWeight)
uniform.float.timeMidnight 			= if(worldSunVectorY < 0.0, 1.0, 0.0) * (1.0 - meWeight)
uniform.float.timeSunrise  			= if(worldSunVectorX > 0.0, 1.0, 0.0) * meWeight
uniform.float.timeSunset   			= if(worldSunVectorX < 0.0, 1.0, 0.0) * meWeight


# Lightning uniforms
#ifdef IS_IRIS
	variable.float.lightningSmooth 	= smooth(if(lightningBoltPosition.w > 0.5, 1.0, 0.0), 0.01, 0.7)
#else
	variable.float.lightningSmooth 	= smooth(if(skyColor.r > 0.32 && abs(skyColor.g - skyColor.b) < 0.09, 1.0, 0.0), 0.01, 0.7)
#endif

uniform.vec3.lightningShading 		= vec3(0.32 * lightningSmooth, 0.3 * lightningSmooth, lightningSmooth) 


# Wind uniforms
uniform.vec3.cloudWindLayer1		= vec3(0.55 * worldTimeCounter, 0.15 * worldTimeCounter, 0.30 * worldTimeCounter)
uniform.vec2.cloudWindLayer2		= vec2(0.65 * worldTimeCounter, 0.35 * worldTimeCounter)
uniform.vec2.cloudWindLayer3		= vec2(0.45 * worldTimeCounter, 0.55 * worldTimeCounter)
uniform.vec2.cloudWindLayer4		= vec2(0.25 * worldTimeCounter, 0.75 * worldTimeCounter)
uniform.vec3.fogWind 				= vec3(worldTimeCounter * 0.2, worldTimeCounter * -0.05, worldTimeCounter * 0.12)


# Biome uniforms
variable.float.biomeSnowy 			= if(biome_precipitation == 2, 1.0, 0.0)
uniform.float.biomeSnowySmooth 		= smooth(biomeSnowy, 5, 5)

uniform.float.biomeAridSmooth 		= smooth(if(biome_category == CAT_DESERT, 1.0, biome_category == CAT_MESA,  0.75, biome_category == CAT_SAVANNA, 0.4, 0.0), 32, 32)
uniform.float.biomeHumidSmooth 		= smooth(if(biome_category == CAT_JUNGLE, 1.0, biome_category == CAT_SWAMP, 0.8, 0.0), 32, 32)

uniform.float.biomeSandstorm		= biomeAridSmooth * 8.0 * wetness
uniform.float.biomeSnowstorm		= smooth(biomeSnowy * wetness, 32, 32) * 3.0
uniform.float.biomeGreenVapor		= biomeHumidSmooth * (10.0 + 4.0 * (wetness + timeSunrise))


# Fog coefficient uniforms
#ifdef TIME_FADE
	variable.float.fadeFactor 		= max(wetness, pow(1.0 - timeNoon * 0.85, 1.6) + timeMidnight)
#else
	variable.float.fadeFactor 		= 1.0
#endif

#ifdef PER_BIOME_FOG
	variable.float.fogMieExtinctR	= 44.0 * fadeFactor + biomeGreenVapor        + biomeSandstorm * 3.3  + biomeSnowstorm
	variable.float.fogMieExtinctG	= 44.0 * fadeFactor + biomeGreenVapor * 0.25 + biomeSandstorm * 6.3  + biomeSnowstorm
	variable.float.fogMieExtinctB	= 44.0 * fadeFactor + biomeGreenVapor * 0.55 + biomeSandstorm * 14.5 + biomeSnowstorm
	variable.vec3.fogMieExtinction	= vec3(fogMieExtinctR, fogMieExtinctG, fogMieExtinctB)

	variable.float.fogMieAlbedo 	= 44.0 * fadeFactor * (0.9 + (biomeSandstorm - wetness) * 0.4 + biomeSnowstorm)
	uniform.vec3.fogMieScattering	= vec3(fogMieAlbedo, fogMieAlbedo, fogMieAlbedo)

	variable.float.fogRayleighR		= 5.802  + biomeGreenVapor * 2.4
	variable.float.fogRayleighG		= 13.558 + biomeGreenVapor * 12.8
	variable.float.fogRayleighB		= 33.1 	 + biomeGreenVapor * 8.0
	uniform.vec3.fogRayleighCoeff	= vec3(fogRayleighR, fogRayleighG, fogRayleighB)
#else
	uniform.vec3.fogMieExtinction	= vec3(44.0 * fadeFactor, 44.0 * fadeFactor, 44.0 * fadeFactor)

	variable.float.fogMieAlbedo 	= 44.0 * fadeFactor * (0.9 - wetness * 0.4)
	uniform.vec3.fogMieScattering	= vec3(fogMieAlbedo, fogMieAlbedo, fogMieAlbedo)

	uniform.vec3.fogRayleighCoeff	= vec3(5.802, 13.558, 33.1)
#endif


# Misc uniforms
uniform.float.eyeSkylightSmooth 	= smooth(pow(clamp(eyeBrightness.y * (1.0 / 240.0), 0.0, 1.0), 4.0), 5, 5)

uniform.float.wetnessCustom 		= smooth(if(biome_precipitation == 1, wetness, 0.0), 5, 5)

#====# Program Toggles #===========================================================================#

program.world0/deferred1.enabled    = CLOUDS && CLOUD_CBR_ENABLED
program.world0/deferred2.enabled    = CLOUDS && CLOUD_CBR_ENABLED

program.world0/deferred3.enabled    = SSPT_ENABLED || RSM_ENABLED
program.world0/deferred4.enabled    = RSM_ENABLED
program.world0/deferred5.enabled    = RSM_ENABLED
program.world0/deferred6.enabled    = SSPT_ENABLED && SVGF_ENABLED

# Classtical blur
program.world0/deferred7.enabled    = SSPT_ENABLED && SVGF_ENABLED
program.world0/deferred7_a.enabled  = SSPT_ENABLED && SVGF_ENABLED
program.world0/deferred7_b.enabled  = SSPT_ENABLED && SVGF_ENABLED
program.world0/deferred7_c.enabled  = SSPT_ENABLED && SVGF_ENABLED
program.world0/deferred7_d.enabled  = SSPT_ENABLED && SVGF_ENABLED

# Horizontal and vertical blur
program.world0/deferred8.enabled    = false
program.world0/deferred8_a.enabled  = false
program.world0/deferred8_b.enabled  = false
program.world0/deferred8_c.enabled  = false
program.world0/deferred8_d.enabled  = false
program.world0/deferred8_e.enabled  = false

# Spatial upscale
program.world0/deferred9.enabled    = false

program.world0/deferred11.enabled   = false
program.world0/deferred12.enabled   = REFLECTION_FILTER && SPECULAR_MAPPING
program.world0/deferred12_a.enabled = REFLECTION_FILTER && SPECULAR_MAPPING

program.world0/composite.enabled    = VOLUMETRIC_FOG || UW_VOLUMETRIC_FOG

program.world0/composite6.enabled   = DEPTH_OF_FIELD
program.world0/composite8.enabled   = MOTION_BLUR

program.world0/composite10.enabled  = BLOOM_ENABLED
program.world0/composite10_a.enabled= BLOOM_ENABLED
program.world0/composite10_b.enabled= BLOOM_ENABLED
program.world0/composite10_c.enabled= BLOOM_ENABLED
program.world0/composite10_d.enabled= BLOOM_ENABLED
program.world0/composite10_e.enabled= BLOOM_ENABLED
program.world0/composite10_f.enabled= BLOOM_ENABLED
program.world0/composite10_g.enabled= BLOOM_ENABLED
program.world0/composite10_h.enabled= BLOOM_ENABLED

program.world0/composite15.enabled  = FSR_ENABLED

#====# Program Scale #=============================================================================#

# scale.composite = 0.5

#====# Buffer Flipping #===========================================================================#

flip.deferred.colortex13  = false
flip.deferred2.colortex13 = true

#====# Buffer Sizes #==============================================================================#

# Current indirect light
# size.buffer.colortex3 = 1.0 0.5

# Reprojected scene history
# size.buffer.colortex4 = 0.5 0.5

# Sky-View LUT, light colors
size.buffer.colortex5 = 256 384

# Transmittance-View LUT, cloud shadow map
size.buffer.colortex10 = 256 384

# Volumetric fog scattering
size.buffer.colortex11 = 0.5 0.5

# Volumetric fog transmittance
size.buffer.colortex12 = 0.5 0.5

# size.buffer.colortex13 = 1.0 0.5
# size.buffer.colortex14 = 1.0 0.5

# FSR EASU output
#ifdef FSR_ENABLED
	size.buffer.colortex15 = 2.0 2.0
#endif

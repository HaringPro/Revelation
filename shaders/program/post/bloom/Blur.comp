/*
--------------------------------------------------------------------------------

	Revelation Shaders

	Copyright (C) 2024 HaringPro
	Apache License 2.0

	Pass: Gaussian blur for bloom tiles

--------------------------------------------------------------------------------
*/

#ifndef COMPUTE_SHADER
#define COMPUTE_SHADER
#endif

const vec2 workGroupsRender = vec2(0.5f, 1.0f);

//======// Output //==============================================================================//

layout (r11f_g11f_b10f) restrict uniform image2D colorimg4;

shared vec3 sharedData[64 + 8];

//======// Main //================================================================================//
void main() {
	ivec2 texel = ivec2(gl_GlobalInvocationID.xy);

	sharedData[gl_LocalInvocationIndex] = imageLoad(colorimg4, texel - (OFFSET << 2)).rgb;
	if (gl_LocalInvocationIndex < 8) {
		sharedData[gl_LocalInvocationIndex + 64] = imageLoad(colorimg4, texel + OFFSET * (64 - 4)).rgb;
	}
	barrier();

	const float sumWeight[5] = float[5](0.27343750, 0.21875000, 0.10937500, 0.03125000, 0.00390625);

	vec3 bloomTiles = vec3(0.0);
	for (int i = -4; i <= 4; ++i) {
		bloomTiles += sharedData[gl_LocalInvocationIndex + i + 4].rgb * sumWeight[abs(i)];
	}

    imageStore(colorimg4, texel, vec4(bloomTiles, 1.0));
}